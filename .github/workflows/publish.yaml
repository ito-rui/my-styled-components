name: Publish
on:
    push:
        branches:
            - main
        tags:
            - "!*"
    workflow_dispatch:
jobs:
    publish-to-npm:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Use Node.js And Setup .npmrc
              uses: actions/setup-node@v1
              with:
                  node-version: "18.x"
                  registry-url: "https://registry.npmjs.org"
                  scope: "rvi-system"
                  always-auth: true
                  fetch-depth: 0
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Can Publish
              run: npx can-npm-publish --verbose
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Install
              run: npm install
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Build
              run: npm run build --if-present
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish to chromatic
              uses: chromaui/action@v1
              with:
                  projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
                  token: ${{ secrets.GH_TOKEN }}

            - name: Get Package Version
              id: get-package-version
              run: echo "::set-output name=package_version::$(node -p "require('./package.json').version")"

            - name: Publish to npm
              run: npm publish --access=public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: package-version-to-git-tag
              uses: pkgdeps/action-package-version-to-git-tag@v1
              with:
                  github_token: ${{ secrets.GH_TOKEN }}
                  github_repo: ${{ github.repository }}
                  git_commit_sha: ${{ github.sha }}
                  git_tag_prefix: "v"
                  version: ${{ steps.get-package-version.outputs.package_version }}
